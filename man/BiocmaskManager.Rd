% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/biocmask-R6-manager.R
\name{BiocmaskManager}
\alias{BiocmaskManager}
\alias{biocmask_manager}
\title{\code{biocmask} Data Mask Manager}
\value{
An R6 object inheriting \code{biocmask_manager}
}
\description{
This object organizes serveral biocmasks, allowing
expressions to be evaluated in different contexts. This object is the return
value of \code{\link[=new_biocmask_manager]{new_biocmask_manager()}}

The "connectedness" of each mask managed by this object is dependent on the
developer. The biocmasks passed to \code{.mask} argument may stem from the same
shared environment, or may have cyclical relationships.
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{ctx}}{get and set the current context}

\item{\code{ctx_mask}}{get the current context biocmask}

\item{\code{n_groups}}{get the current context biocmask group size}

\item{\code{group_id}}{get and set the current context biocmask group id}

\item{\code{masks}}{get the private list of masks}

\item{\code{extended}}{other environments extended from a context mask.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-biocmask_manager-new}{\code{biocmask_manager$new()}}
\item \href{#method-biocmask_manager-link_ctx}{\code{biocmask_manager$link_ctx()}}
\item \href{#method-biocmask_manager-along_ctx}{\code{biocmask_manager$along_ctx()}}
\item \href{#method-biocmask_manager-eval}{\code{biocmask_manager$eval()}}
\item \href{#method-biocmask_manager-result}{\code{biocmask_manager$result()}}
\item \href{#method-biocmask_manager-results}{\code{biocmask_manager$results()}}
\item \href{#method-biocmask_manager-apply}{\code{biocmask_manager$apply()}}
\item \href{#method-biocmask_manager-clone}{\code{biocmask_manager$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-biocmask_manager-new"></a>}}
\if{latex}{\out{\hypertarget{method-biocmask_manager-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{biocmask_manager$new(.data, .masks, .ctx_env, .extended_env = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{.data}}{Original data}

\item{\code{.masks}}{list of named biocmask objects}

\item{\code{.ctx_env}}{shared context environment}

\item{\code{.extended_env}}{other extended environments}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-biocmask_manager-link_ctx"></a>}}
\if{latex}{\out{\hypertarget{method-biocmask_manager-link_ctx}{}}}
\subsection{Method \code{link_ctx()}}{
installs a link between two contexts via a
view_spec object. Currently experimental and not working!
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{biocmask_manager$link_ctx(view_spec, pronoun_name = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{view_spec}}{view specification made view \code{\link[=new_view_spec]{new_view_spec()}}}

\item{\code{pronoun_name}}{name of the pronoun to be created. defaults to
\code{sprintf(".\%s", view_spec$ctx)}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
self
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-biocmask_manager-along_ctx"></a>}}
\if{latex}{\out{\hypertarget{method-biocmask_manager-along_ctx}{}}}
\subsection{Method \code{along_ctx()}}{
provides a sequence for iterate over the groups
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{biocmask_manager$along_ctx()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-biocmask_manager-eval"></a>}}
\if{latex}{\out{\hypertarget{method-biocmask_manager-eval}{}}}
\subsection{Method \code{eval()}}{
eval an expression in the current context
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{biocmask_manager$eval(quo, env = caller_env())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{quo}}{a quosure or quoted expression}

\item{\code{env}}{an environment}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
returns evaluated \code{quo} in the form of a chop
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-biocmask_manager-result"></a>}}
\if{latex}{\out{\hypertarget{method-biocmask_manager-result}{}}}
\subsection{Method \code{result()}}{
collections the envaluated result of a given name
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{biocmask_manager$result(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{a character scalar of a name within the mask}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-biocmask_manager-results"></a>}}
\if{latex}{\out{\hypertarget{method-biocmask_manager-results}{}}}
\subsection{Method \code{results()}}{
collects the evaluated results with biocmasks
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{biocmask_manager$results(.from_masks)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{.from_masks}}{index vector from which masks to collect results.
a missing argument will collect all results.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
named list for each mask containing named list of evaluated
expressions.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-biocmask_manager-apply"></a>}}
\if{latex}{\out{\hypertarget{method-biocmask_manager-apply}{}}}
\subsection{Method \code{apply()}}{
apply a function to each mask this object manages
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{biocmask_manager$apply(.f, ..., .on_masks)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{.f}}{a function to apply to the managed masks}

\item{\code{...}}{additional arguments to pass to \code{.f}}

\item{\code{.on_masks}}{index vector indicating which masks to apply \code{.f} to.
a missing argument will collect all results.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
named list containing the results of each function
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-biocmask_manager-clone"></a>}}
\if{latex}{\out{\hypertarget{method-biocmask_manager-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{biocmask_manager$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
