[{"path":"https://jtlandis.github.io/biocmask/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 biocmask authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jtlandis.github.io/biocmask/articles/biocmask.html","id":"quick-start","dir":"Articles","previous_headings":"","what":"Quick start","title":"biocmask Usage Guide","text":"biocmask provides efficient abstractions SummarizedExperiment using common dplyr functions feels natural operating data.frame tibble. biocmask uses data-masking rlang package order connect dplyr functions SummarizedExperiment slots manner aims intuitive avoiding ambiguity outcomes.","code":""},{"path":"https://jtlandis.github.io/biocmask/articles/biocmask.html","id":"supported-data-types-and-operations","dir":"Articles","previous_headings":"Quick start","what":"Supported data types and operations","title":"biocmask Usage Guide","text":"biocmask works SummarizedExperiment objects, well classes derived , including DESeqDataSet, SingleCellExperiment, etc. supports following operations: mutate select summarize pull filter arrange","code":""},{"path":"https://jtlandis.github.io/biocmask/articles/biocmask.html","id":"typical-use-case","dir":"Articles","previous_headings":"Quick start","what":"Typical use case","title":"biocmask Usage Guide","text":"operations can span contexts, necessary data extracted context computation: Calling .cols assay context produces object matching size orientation assay data. Alternatively used purrr compute row means: See details objects made available across contexts. biocmask also enables common grouping summarization routines:","code":"library(airway) data(airway) library(dplyr) library(biocmask) # add data (mutate) to any of the three tables, # assay, colData, rowData, # ...using contextual helpers cols() and rows() airway |>   mutate(log_counts = log1p(counts),          cols(treated = dex == \"trt\"),          rows(new_id = paste0(\"gene-\", gene_name))) ## # A RangedSummarizedExperiment-tibble Abstraction: 63,677 × 8 ##     .features      .samples | counts log_counts | gene_id gene_name gene_biotype ##     <chr>          <chr>    |  <int>      <dbl> | <chr>   <chr>     <chr>        ##   1 ENSG000000000… SRR1039… |    679       6.52 | ENSG00… TSPAN6    protein_cod… ##   2 ENSG000000000… SRR1039… |      0       0    | ENSG00… TNMD      protein_cod… ##   3 ENSG000000004… SRR1039… |    467       6.15 | ENSG00… DPM1      protein_cod… ##   4 ENSG000000004… SRR1039… |    260       5.56 | ENSG00… SCYL3     protein_cod… ##   5 ENSG000000004… SRR1039… |     60       4.11 | ENSG00… C1orf112  protein_cod… ##   …        …           …           …         …       …        …           …      ## n-4 ENSG000002734… SRR1039… |      0       0    | ENSG00… RP11-180… antisense    ## n-3 ENSG000002734… SRR1039… |      0       0    | ENSG00… TSEN34    protein_cod… ## n-2 ENSG000002734… SRR1039… |      0       0    | ENSG00… RP11-138… lincRNA      ## n-1 ENSG000002734… SRR1039… |      0       0    | ENSG00… AP000230… lincRNA      ## n   ENSG000002734… SRR1039… |      0       0    | ENSG00… RP11-80H… lincRNA      ## # ℹ n = 509,416 ## # ℹ 7 more variables: new_id <chr>, `` <>, SampleName <fct>, cell <fct>, ## #   dex <fct>, albut <fct>, treated <lgl> airway$sizeFactor <- runif(8, .9, 1.1)  # making scaled counts, then computing row means: airway |>   mutate(scaled_counts = counts / .cols$sizeFactor, #          rows(ave_scl_cts = rowMeans(.assays_asis$scaled_counts))) ## # A RangedSummarizedExperiment-tibble Abstraction: 63,677 × 8 ##     .features   .samples | counts scaled_counts | gene_id gene_name gene_biotype ##     <chr>       <chr>    |  <int>         <dbl> | <chr>   <chr>     <chr>        ##   1 ENSG000000… SRR1039… |    679         741.  | ENSG00… TSPAN6    protein_cod… ##   2 ENSG000000… SRR1039… |      0           0   | ENSG00… TNMD      protein_cod… ##   3 ENSG000000… SRR1039… |    467         510.  | ENSG00… DPM1      protein_cod… ##   4 ENSG000000… SRR1039… |    260         284.  | ENSG00… SCYL3     protein_cod… ##   5 ENSG000000… SRR1039… |     60          65.5 | ENSG00… C1orf112  protein_cod… ##   …      …          …           …            …       …        …           …      ## n-4 ENSG000002… SRR1039… |      0           0   | ENSG00… RP11-180… antisense    ## n-3 ENSG000002… SRR1039… |      0           0   | ENSG00… TSEN34    protein_cod… ## n-2 ENSG000002… SRR1039… |      0           0   | ENSG00… RP11-138… lincRNA      ## n-1 ENSG000002… SRR1039… |      0           0   | ENSG00… AP000230… lincRNA      ## n   ENSG000002… SRR1039… |      0           0   | ENSG00… RP11-80H… lincRNA      ## # ℹ n = 509,416 ## # ℹ 7 more variables: ave_scl_cts <dbl>, `` <>, SampleName <fct>, cell <fct>, ## #   dex <fct>, albut <fct>, sizeFactor <dbl> airway |>   mutate(scaled_counts = counts / .cols$sizeFactor,          # You may expect a list when accessing other contexts          # from either the rows() or cols() contexts.          rows(ave_scl_cts = purrr::map_dbl(.assays$scaled_counts, mean))) ## # A RangedSummarizedExperiment-tibble Abstraction: 63,677 × 8 ##     .features   .samples | counts scaled_counts | gene_id gene_name gene_biotype ##     <chr>       <chr>    |  <int>         <dbl> | <chr>   <chr>     <chr>        ##   1 ENSG000000… SRR1039… |    679         741.  | ENSG00… TSPAN6    protein_cod… ##   2 ENSG000000… SRR1039… |      0           0   | ENSG00… TNMD      protein_cod… ##   3 ENSG000000… SRR1039… |    467         510.  | ENSG00… DPM1      protein_cod… ##   4 ENSG000000… SRR1039… |    260         284.  | ENSG00… SCYL3     protein_cod… ##   5 ENSG000000… SRR1039… |     60          65.5 | ENSG00… C1orf112  protein_cod… ##   …      …          …           …            …       …        …           …      ## n-4 ENSG000002… SRR1039… |      0           0   | ENSG00… RP11-180… antisense    ## n-3 ENSG000002… SRR1039… |      0           0   | ENSG00… TSEN34    protein_cod… ## n-2 ENSG000002… SRR1039… |      0           0   | ENSG00… RP11-138… lincRNA      ## n-1 ENSG000002… SRR1039… |      0           0   | ENSG00… AP000230… lincRNA      ## n   ENSG000002… SRR1039… |      0           0   | ENSG00… RP11-80H… lincRNA      ## # ℹ n = 509,416 ## # ℹ 7 more variables: ave_scl_cts <dbl>, `` <>, SampleName <fct>, cell <fct>, ## #   dex <fct>, albut <fct>, sizeFactor <dbl> summary <- airway |>   group_by(rows(gene_biotype)) |>   summarize(col_sums = colSums(counts),             # may rename rows with .features             rows(.features = unique(gene_biotype))) # summarize returns a SummarizedExperiment here, # retaining rowData and colData  summary |> rowData() ## DataFrame with 30 rows and 1 column ##                                    gene_biotype ##                                     <character> ## protein_coding                   protein_coding ## pseudogene                           pseudogene ## processed_transcript       processed_transcript ## antisense                             antisense ## lincRNA                                 lincRNA ## ...                                         ... ## IG_C_pseudogene                 IG_C_pseudogene ## TR_D_gene                             TR_D_gene ## IG_J_pseudogene                 IG_J_pseudogene ## 3prime_overlapping_ncrna 3prime_overlapping_n.. ## processed_pseudogene       processed_pseudogene # visualizing the output as a tibble: library(tibble) summary |>   pull(col_sums) |>   as_tibble(rownames = \"type\") ## # A tibble: 30 × 9 ##    type        SRR1039508 SRR1039509 SRR1039512 SRR1039513 SRR1039516 SRR1039517 ##    <chr>            <dbl>      <dbl>      <dbl>      <dbl>      <dbl>      <dbl> ##  1 protein_co…   19413626      45654          4       1188      96378          0 ##  2 pseudogene    17741060      45864          4        462      38656          0 ##  3 processed_…   23926011     133335          0       1049      64884          0 ##  4 antisense     14360299     120060          4       1113      36267          0 ##  5 lincRNA       23003444     206075       6038        626      81606          0 ##  6 polymorphi…   29233398     125015       5618        803      88868          0 ##  7 IG_V_pseud…   18114369     145078       7662        316      44385          0 ##  8 IG_V_gene     20103401     170641       5579        256      92499          0 ##  9 sense_over…     807285     147563       7869        339        491          0 ## 10 sense_intr…     733916     149486       9443        202        502          0 ## # ℹ 20 more rows ## # ℹ 2 more variables: SRR1039520 <dbl>, SRR1039521 <dbl>"},{"path":"https://jtlandis.github.io/biocmask/articles/biocmask.html","id":"related-work","dir":"Articles","previous_headings":"Quick start","what":"Related work","title":"biocmask Usage Guide","text":"note biocmask highly related tidyomics projects including: tidySummarizedExperiment plyranges DFplyr . focused design principles function endomorphism (returning object input), avoiding ambiguity strictly defined behavior (potentially expense longer code), allowing user convenience multiple expressions result, may improved computational performance.","code":""},{"path":"https://jtlandis.github.io/biocmask/articles/biocmask.html","id":"manipulating-summarizedexperiment-with-biocmask","dir":"Articles","previous_headings":"","what":"Manipulating SummarizedExperiment with biocmask","title":"biocmask Usage Guide","text":"SummarizedExperiment object contains three main components/“contexts” mask, assays(), rowData()1 colData(). biocmask provides variables -data within current contexts enabling call S4 methods S4 objects dplyr verbs. require access variables outside context, may use pronouns made available biocmask specify find variables. .assays, .rows .cols pronouns outputs depends evaluating context. Users expect underlying data returned .rows .cols pronouns assays context vector, replicated match size assay context.  Alternatively, using pronoun either rows() cols() contexts return list equal length either nrows(rowData()) nrows(colData()) respectively.","code":""},{"path":"https://jtlandis.github.io/biocmask/articles/biocmask.html","id":"assay-context","dir":"Articles","previous_headings":"Manipulating SummarizedExperiment with biocmask","what":"assay context","title":"biocmask Usage Guide","text":"Default evaluation context within rowData context: .assays$foo alias lapply(seq_len(nrow()), \\(, x) x[,,drop=FALSE], x = foo) within colData context: .assays$foo alias lapply(seq_len(ncol()), \\(, x) x[,,drop=FALSE], x = foo) .assays_asis →\\pronoun direct bindings assays() assay_ctx(expr, asis = FALSE) →\\short hand bind assay context front current context.","code":""},{"path":"https://jtlandis.github.io/biocmask/articles/biocmask.html","id":"rows-context","dir":"Articles","previous_headings":"Manipulating SummarizedExperiment with biocmask","what":"rows context","title":"biocmask Usage Guide","text":"rows(...) →\\sentinel function call indicate evaluation context. within assay context: .rows$foo alias vctrs::vec_rep(foo, times = ncol()) within colData context: .rows$foo alias vctrs::vec_rep(list(foo), times = n()) .rows_asis →\\pronoun direct bindings rowData() row_ctx(expr, asis = FALSE) →\\shorthand bind rowData context front current context","code":""},{"path":"https://jtlandis.github.io/biocmask/articles/biocmask.html","id":"cols-context","dir":"Articles","previous_headings":"Manipulating SummarizedExperiment with biocmask","what":"cols context","title":"biocmask Usage Guide","text":"cols(...) →\\sentinel function call indicate evaluation context. within assay context: .cols$foo alias vctrs::vec_rep_each(foo, times = nrow()) within rowData context: .rows$foo alias vctrs::vec_rep(list(foo), times = n()) .cols_asis →\\pronoun direct bindings colData() col_ctx(expr, asis = FALSE) →\\shorthand bind colData context front current context","code":""},{"path":"https://jtlandis.github.io/biocmask/articles/biocmask.html","id":"multiple-expressions-enabled-via-biocmask","dir":"Articles","previous_headings":"Manipulating SummarizedExperiment with biocmask","what":"Multiple expressions enabled via biocmask","title":"biocmask Usage Guide","text":"can compare two ways dividing vector colData along columns assay data:","code":"# here the `.cols$` pronoun reshapes the data to fit the `assays` context airway |>   mutate(scaled_counts = counts / .cols$sizeFactor) ## # A RangedSummarizedExperiment-tibble Abstraction: 63,677 × 8 ##     .features .samples | counts scaled_counts | gene_id gene_name gene_biotype | ##     <chr>     <chr>    |  <int>         <dbl> | <chr>   <chr>     <chr>        | ##   1 ENSG0000… SRR1039… |    679         741.  | ENSG00… TSPAN6    protein_cod… | ##   2 ENSG0000… SRR1039… |      0           0   | ENSG00… TNMD      protein_cod… | ##   3 ENSG0000… SRR1039… |    467         510.  | ENSG00… DPM1      protein_cod… | ##   4 ENSG0000… SRR1039… |    260         284.  | ENSG00… SCYL3     protein_cod… | ##   5 ENSG0000… SRR1039… |     60          65.5 | ENSG00… C1orf112  protein_cod… | ##   …     …         …           …            …       …        …           …        ## n-4 ENSG0000… SRR1039… |      0           0   | ENSG00… RP11-180… antisense    | ## n-3 ENSG0000… SRR1039… |      0           0   | ENSG00… TSEN34    protein_cod… | ## n-2 ENSG0000… SRR1039… |      0           0   | ENSG00… RP11-138… lincRNA      | ## n-1 ENSG0000… SRR1039… |      0           0   | ENSG00… AP000230… lincRNA      | ## n   ENSG0000… SRR1039… |      0           0   | ENSG00… RP11-80H… lincRNA      | ## # ℹ n = 509,416 ## # ℹ 5 more variables: SampleName <fct>, cell <fct>, dex <fct>, albut <fct>, ## #   sizeFactor <dbl> # this is equivalent to the following, where we have to transpose # the `counts` assay data twice to enable the correct recycling # of the size factor vector airway |>   mutate(scaled_counts = t(t(counts) / .cols_asis$sizeFactor)) ## # A RangedSummarizedExperiment-tibble Abstraction: 63,677 × 8 ##     .features .samples | counts scaled_counts | gene_id gene_name gene_biotype | ##     <chr>     <chr>    |  <int>         <dbl> | <chr>   <chr>     <chr>        | ##   1 ENSG0000… SRR1039… |    679         741.  | ENSG00… TSPAN6    protein_cod… | ##   2 ENSG0000… SRR1039… |      0           0   | ENSG00… TNMD      protein_cod… | ##   3 ENSG0000… SRR1039… |    467         510.  | ENSG00… DPM1      protein_cod… | ##   4 ENSG0000… SRR1039… |    260         284.  | ENSG00… SCYL3     protein_cod… | ##   5 ENSG0000… SRR1039… |     60          65.5 | ENSG00… C1orf112  protein_cod… | ##   …     …         …           …            …       …        …           …        ## n-4 ENSG0000… SRR1039… |      0           0   | ENSG00… RP11-180… antisense    | ## n-3 ENSG0000… SRR1039… |      0           0   | ENSG00… TSEN34    protein_cod… | ## n-2 ENSG0000… SRR1039… |      0           0   | ENSG00… RP11-138… lincRNA      | ## n-1 ENSG0000… SRR1039… |      0           0   | ENSG00… AP000230… lincRNA      | ## n   ENSG0000… SRR1039… |      0           0   | ENSG00… RP11-80H… lincRNA      | ## # ℹ n = 509,416 ## # ℹ 5 more variables: SampleName <fct>, cell <fct>, dex <fct>, albut <fct>, ## #   sizeFactor <dbl>"},{"path":[]},{"path":"https://jtlandis.github.io/biocmask/articles/biocmask.html","id":"object-integrity","dir":"Articles","previous_headings":"Advanced features","what":"Object integrity","title":"biocmask Usage Guide","text":"biocmask provides opinionated framework dplyr verbs interact SummarizedExperiment objects. general, biocmask allow operations guarantee valid return object. reason arrange(), filter() group_by() allow operations default assay context, likely break assumed structure SummarizedExperiment object.","code":""},{"path":"https://jtlandis.github.io/biocmask/articles/biocmask.html","id":"group_by","dir":"Articles","previous_headings":"Advanced features","what":"group_by()","title":"biocmask Usage Guide","text":"biocmask also supports group_by operations allowing users query information dplyr::n() dplyr::cur_group_id(). However due linked structure SummarizedExperiment object biocmask providing multiple evaluation contexts, grouping operations complex return values potentionally ambiguous. reason groupings contextual. assay context dependently linked groupings rows cols contexts , grouping rows ignored viewed cols context similarly grouping cols ignored viewed rows context. way, chosen make groupings rows cols independent . figure attempts show groupings conditionally dropped scope evaluation. motivate choice, suppose drop grouping values. Assume small 5 4 SummarizedExperiment object. rowData() colData() grouped 2 groups rowData() colData() totaling 4 groups across assays. syntax implies wish move data colData() rowData(). previously established conventions, expect output alias vctrs::vec_rep(list(condition), times = n()). Additionally rows() sentinal expect output .cols$condition need match size evaluation context. Unfortunately, becomes extremely difficult resolve current conventions. Without dropping cols() groupings, rows() grouping evaluated equal number groups cols(). first glance, may seem desirable, problem arises considering theses outputs across groups stored per group rows(). example, output .cols$condition return list equal number groups column context? yes, need consider size stability output context! Assuming rowData() least one group three elements, guarentee fit (also makes poor assumption elements rowData() somehow correspond groups colData()). Thus left wrapping results list replicating appropriate size. said done, list lists, difficult reason , potentionally unexpected painful work . reason groupings present rowData() context groupings rowData(), similarly colData() context.","code":"group_by(se_simple, rows(direction), cols(condition)) |>   mutate(rows(data_from_cols = .cols$condition))"},{"path":"https://jtlandis.github.io/biocmask/articles/biocmask.html","id":"printing","dir":"Articles","previous_headings":"Advanced features","what":"Printing","title":"biocmask Usage Guide","text":"Motivated show/print function tidySummarizedExperiment, visualize data tabular. Also following example tidySummarizedExperiment, biocmask offers option turn return default show method SummarizedExperiment: Since biocmask aims leave input data -possible, considered providing support printing S4Vectors within tibble(). clear, biocmask allow put S4Vectors inside tibble(), allow S4Vectors printed pillar(), formatting engine behind tibble() pretty printing. enable behavior, data reported user, proxy S4Vector custom vctrs_vctr object biocmask::vec_phantom(). truth, vec_phantom object simple integer vector “phantomData” attribute. allows us carry along S4Vector pillar()’s printing pipeline time print column. pillar_shaft() method vec_phantom format S4 data biocmask_pillar_format() generic, default calls S4Vectors::showAsCell(). Users free create methods S4 vectors differ S4Vectors::showAsCell() like, seen ?`biocmask-printing`","code":"options(\"restore_SingleCellExperiment_show\" = TRUE)"},{"path":"https://jtlandis.github.io/biocmask/articles/biocmask.html","id":"renaming-rows-or-columns","dir":"Articles","previous_headings":"Advanced features","what":"renaming rows or columns","title":"biocmask Usage Guide","text":"Inspired tidySummarizedExperiment, biocmask provides access rownames colnames SummarizedExperiment object installing .features .samples rowData() colData() contexts respectively. special assigning value .features rowData() context .samples colData() context create new column, changes rownames colnames resulting object.","code":"se_simple ## # A SummarizedExperiment-tibble Abstraction: 5 × 4 ##     .features .samples | counts logcounts | gene  length direction | sample ##     <chr>     <chr>    |  <int>     <dbl> | <chr>  <int> <chr>     | <chr>  ##   1 row_1     col_1    |     14      2.64 | g1         1 -         | s1     ##   2 row_2     col_1    |     19      2.94 | g2        24 +         | s1     ##   3 row_3     col_1    |     16      2.77 | g3        60 +         | s1     ##   4 row_4     col_1    |     11      2.40 | g4        39 -         | s1     ##   5 row_5     col_1    |     18      2.89 | g5        37 +         | s1     ##   …   …         …             …        …     …         … …            …     ## n-4 row_1     col_4    |      9      2.20 | g1         1 -         | s4     ## n-3 row_2     col_4    |      4      1.39 | g2        24 +         | s4     ## n-2 row_3     col_4    |     20      3.00 | g3        60 +         | s4     ## n-1 row_4     col_4    |      3      1.10 | g4        39 -         | s4     ## n   row_5     col_4    |      5      1.61 | g5        37 +         | s4     ## # ℹ n = 20 ## # ℹ 1 more variable: condition <chr> # moving data to rownames and colnames se_simple |>   mutate(     orig_names = sprintf(       \"%s-%s\",       # .features is installed in the rows() context       .rows$.features,       # .samples is installed in the cols() context       .cols$.samples),     rows(.features = gene,          # deleting rowData column          gene = NULL),     cols(.samples = sample,          # deleting colData column          sample = NULL)   ) ## # A SummarizedExperiment-tibble Abstraction: 5 × 4 ##     .features .samples | counts logcounts orig_names  | length direction | ##     <chr>     <chr>    |  <int>     <dbl> <chr>       |  <int> <chr>     | ##   1 g1        s1       |     14      2.64 row_1-col_1 |      1 -         | ##   2 g2        s1       |     19      2.94 row_2-col_1 |     24 +         | ##   3 g3        s1       |     16      2.77 row_3-col_1 |     60 +         | ##   4 g4        s1       |     11      2.40 row_4-col_1 |     39 -         | ##   5 g5        s1       |     18      2.89 row_5-col_1 |     37 +         | ##   …  …         …              …        …       …             … …           ## n-4 g1        s4       |      9      2.20 row_1-col_4 |      1 -         | ## n-3 g2        s4       |      4      1.39 row_2-col_4 |     24 +         | ## n-2 g3        s4       |     20      3.00 row_3-col_4 |     60 +         | ## n-1 g4        s4       |      3      1.10 row_4-col_4 |     39 -         | ## n   g5        s4       |      5      1.61 row_5-col_4 |     37 +         | ## # ℹ n = 20 ## # ℹ 1 more variable: condition <chr>"},{"path":"https://jtlandis.github.io/biocmask/articles/biocmask.html","id":"troubleshooting-and-best-practices","dir":"Articles","previous_headings":"","what":"Troubleshooting and best practices","title":"biocmask Usage Guide","text":"biocmask takes inspiration data masks used dplyr, unfortunately complex. means overhead creating evaluation mask per dplyr verb. Try reduce number dplyr verb calls instead increase content verb. example instead : following","code":".data |>   mutate(foo = bar) |>   mutate(baz = foo^2) .data |>   mutate(     foo = bar,     baz = foo^2   )"},{"path":"https://jtlandis.github.io/biocmask/articles/biocmask.html","id":"community-and-support","dir":"Articles","previous_headings":"","what":"Community and support","title":"biocmask Usage Guide","text":"Please feel free post questions biocmask : Bioconductor support site Issue GitHub #tidiness_in_bioc channel community-bioc Slack code contributions: small fixes, feel free post PR GitHub larger structural changes package code, please reach development team first one channels. Thanks interest biocmask!","code":""},{"path":"https://jtlandis.github.io/biocmask/articles/biocmask.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"biocmask Usage Guide","text":"","code":"devtools::session_info() ## ─ Session info ─────────────────────────────────────────────────────────────── ##  setting  value ##  version  R version 4.4.1 (2024-06-14) ##  os       Ubuntu 22.04.4 LTS ##  system   x86_64, linux-gnu ##  ui       X11 ##  language en ##  collate  en_US.UTF-8 ##  ctype    en_US.UTF-8 ##  tz       UTC ##  date     2024-09-19 ##  pandoc   3.2 @ /usr/bin/ (via rmarkdown) ##  ## ─ Packages ─────────────────────────────────────────────────────────────────── ##  package              * version    date (UTC) lib source ##  abind                  1.4-8      2024-09-12 [1] RSPM (R 4.4.0) ##  airway               * 1.24.0     2024-05-02 [1] Bioconductor 3.19 (R 4.4.1) ##  Biobase              * 2.64.0     2024-04-30 [1] Bioconductor 3.19 (R 4.4.1) ##  BiocGenerics         * 0.50.0     2024-04-30 [1] Bioconductor 3.19 (R 4.4.1) ##  biocmask             * 0.99.10    2024-09-19 [1] Bioconductor ##  bslib                  0.8.0      2024-07-29 [2] RSPM (R 4.4.0) ##  cachem                 1.1.0      2024-05-16 [2] RSPM (R 4.4.0) ##  cli                    3.6.3      2024-06-21 [2] RSPM (R 4.4.0) ##  crayon                 1.5.3      2024-06-20 [2] RSPM (R 4.4.0) ##  DelayedArray           0.30.1     2024-05-07 [1] Bioconductor 3.19 (R 4.4.1) ##  desc                   1.4.3      2023-12-10 [2] RSPM (R 4.4.0) ##  devtools               2.4.5      2022-10-11 [2] RSPM (R 4.4.0) ##  digest                 0.6.37     2024-08-19 [2] RSPM (R 4.4.0) ##  dplyr                * 1.1.4      2023-11-17 [1] RSPM (R 4.4.0) ##  ellipsis               0.3.2      2021-04-29 [2] RSPM (R 4.4.0) ##  evaluate               1.0.0      2024-09-17 [2] RSPM (R 4.4.0) ##  fansi                  1.0.6      2023-12-08 [2] RSPM (R 4.4.0) ##  fastmap                1.2.0      2024-05-15 [2] RSPM (R 4.4.0) ##  fs                     1.6.4      2024-04-25 [2] RSPM (R 4.4.0) ##  generics               0.1.3      2022-07-05 [1] RSPM (R 4.4.0) ##  GenomeInfoDb         * 1.40.1     2024-05-24 [1] Bioconductor 3.19 (R 4.4.1) ##  GenomeInfoDbData       1.2.12     2024-06-25 [1] Bioconductor ##  GenomicRanges        * 1.56.1     2024-06-12 [1] Bioconductor 3.19 (R 4.4.1) ##  glue                   1.7.0      2024-01-09 [2] RSPM (R 4.4.0) ##  highr                  0.11       2024-05-26 [2] RSPM (R 4.4.0) ##  htmltools              0.5.8.1    2024-04-04 [2] RSPM (R 4.4.0) ##  htmlwidgets            1.6.4      2023-12-06 [2] RSPM (R 4.4.0) ##  httpuv                 1.6.15     2024-03-26 [2] RSPM (R 4.4.0) ##  httr                   1.4.7      2023-08-15 [2] RSPM (R 4.4.0) ##  IRanges              * 2.38.1     2024-07-03 [1] Bioconductor 3.19 (R 4.4.1) ##  jquerylib              0.1.4      2021-04-26 [2] RSPM (R 4.4.0) ##  jsonlite               1.8.8      2023-12-04 [2] RSPM (R 4.4.0) ##  knitr                  1.48       2024-07-07 [2] RSPM (R 4.4.0) ##  later                  1.3.2      2023-12-06 [2] RSPM (R 4.4.0) ##  lattice                0.22-6     2024-03-20 [3] CRAN (R 4.4.1) ##  lifecycle              1.0.4      2023-11-07 [2] RSPM (R 4.4.0) ##  magrittr               2.0.3      2022-03-30 [2] RSPM (R 4.4.0) ##  Matrix                 1.7-0      2024-04-26 [3] CRAN (R 4.4.1) ##  MatrixGenerics       * 1.16.0     2024-04-30 [1] Bioconductor 3.19 (R 4.4.1) ##  matrixStats          * 1.4.1      2024-09-08 [1] RSPM (R 4.4.0) ##  memoise                2.0.1      2021-11-26 [2] RSPM (R 4.4.0) ##  mime                   0.12       2021-09-28 [2] RSPM (R 4.4.0) ##  miniUI                 0.1.1.1    2018-05-18 [2] RSPM (R 4.4.0) ##  pillar                 1.9.0      2023-03-22 [2] RSPM (R 4.4.0) ##  pkgbuild               1.4.4      2024-03-17 [2] RSPM (R 4.4.0) ##  pkgconfig              2.0.3      2019-09-22 [2] RSPM (R 4.4.0) ##  pkgdown                2.1.1      2024-09-17 [2] RSPM (R 4.4.0) ##  pkgload                1.4.0      2024-06-28 [2] RSPM (R 4.4.0) ##  profvis                0.3.8      2023-05-02 [2] RSPM (R 4.4.0) ##  promises               1.3.0      2024-04-05 [2] RSPM (R 4.4.0) ##  purrr                  1.0.2      2023-08-10 [2] RSPM (R 4.4.0) ##  R6                     2.5.1      2021-08-19 [2] RSPM (R 4.4.0) ##  ragg                   1.3.3      2024-09-11 [2] RSPM (R 4.4.0) ##  Rcpp                   1.0.13     2024-07-17 [2] RSPM (R 4.4.0) ##  remotes                2.5.0.9000 2024-09-11 [1] Github (r-lib/remotes@5b7eb08) ##  rlang                  1.1.4      2024-06-04 [2] RSPM (R 4.4.0) ##  rmarkdown              2.28       2024-08-17 [2] RSPM (R 4.4.0) ##  S4Arrays               1.4.1      2024-05-20 [1] Bioconductor 3.19 (R 4.4.1) ##  S4Vectors            * 0.42.1     2024-07-03 [1] Bioconductor 3.19 (R 4.4.1) ##  S7                     0.1.1      2023-09-17 [1] RSPM (R 4.4.0) ##  sass                   0.4.9      2024-03-15 [2] RSPM (R 4.4.0) ##  sessioninfo            1.2.2      2021-12-06 [2] RSPM (R 4.4.0) ##  shiny                  1.9.1      2024-08-01 [2] RSPM (R 4.4.0) ##  SparseArray            1.4.8      2024-05-24 [1] Bioconductor 3.19 (R 4.4.1) ##  stringi                1.8.4      2024-05-06 [2] RSPM (R 4.4.0) ##  stringr                1.5.1      2023-11-14 [2] RSPM (R 4.4.0) ##  SummarizedExperiment * 1.34.0     2024-05-01 [1] Bioconductor 3.19 (R 4.4.1) ##  systemfonts            1.1.0      2024-05-15 [2] RSPM (R 4.4.0) ##  textshaping            0.4.0      2024-05-24 [2] RSPM (R 4.4.0) ##  tibble               * 3.2.1      2023-03-20 [2] RSPM (R 4.4.0) ##  tidyr                  1.3.1      2024-01-24 [1] RSPM (R 4.4.0) ##  tidyselect             1.2.1      2024-03-11 [1] RSPM (R 4.4.0) ##  UCSC.utils             1.0.0      2024-04-30 [1] Bioconductor 3.19 (R 4.4.1) ##  urlchecker             1.0.1      2021-11-30 [2] RSPM (R 4.4.0) ##  usethis                3.0.0      2024-07-29 [2] RSPM (R 4.4.0) ##  utf8                   1.2.4      2023-10-22 [2] RSPM (R 4.4.0) ##  vctrs                  0.6.5      2023-12-01 [2] RSPM (R 4.4.0) ##  withr                  3.0.1      2024-07-31 [2] RSPM (R 4.4.0) ##  xfun                   0.47       2024-08-17 [2] RSPM (R 4.4.0) ##  xtable                 1.8-4      2019-04-21 [2] RSPM (R 4.4.0) ##  XVector                0.44.0     2024-04-30 [1] Bioconductor 3.19 (R 4.4.1) ##  yaml                   2.3.10     2024-07-26 [2] RSPM (R 4.4.0) ##  zlibbioc               1.50.0     2024-04-30 [1] Bioconductor 3.19 (R 4.4.1) ##  ##  [1] /__w/_temp/Library ##  [2] /usr/local/lib/R/site-library ##  [3] /usr/local/lib/R/library ##  ## ──────────────────────────────────────────────────────────────────────────────"},{"path":[]},{"path":"https://jtlandis.github.io/biocmask/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Justin Landis. Author, maintainer. Michael Love. Author.","code":""},{"path":"https://jtlandis.github.io/biocmask/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Landis J, Love M (2024). biocmask: Data masks SummarizedExperiment enabling dplyr-like manipulation. R package version 0.99.10, https://jtlandis.github.io/biocmask, https://github.com/jtlandis/biocmask.","code":"@Manual{,   title = {biocmask: Data masks for SummarizedExperiment enabling dplyr-like manipulation},   author = {Justin Landis and Michael Love},   year = {2024},   note = {R package version 0.99.10, https://jtlandis.github.io/biocmask},   url = {https://github.com/jtlandis/biocmask}, }"},{"path":"https://jtlandis.github.io/biocmask/index.html","id":"biocmask","dir":"","previous_headings":"","what":"Data masks for SummarizedExperiment enabling dplyr-like manipulation","title":"Data masks for SummarizedExperiment enabling dplyr-like manipulation","text":"biocmask provides efficient abstractions SummarizedExperiment using common dplyr functions feels natural operating data.frame tibble. biocmask uses data-masking rlang package order connect dplyr functions SummarizedExperiment slots manner aims intuitive avoiding ambiguity outcomes. Note: package still active development Fall 2024.","code":""},{"path":"https://jtlandis.github.io/biocmask/index.html","id":"data-masking-summarizedexperiment","dir":"","previous_headings":"","what":"data masking SummarizedExperiment","title":"Data masks for SummarizedExperiment enabling dplyr-like manipulation","text":"SummarizedExperiment object contains three main components/“contexts” mask, assays(), rowData()1 colData(). biocmask provides variables -data within current contexts enabling call S4 methods S4 objects dplyr verbs. require access variables outside context, may use pronouns made available biocmask specify find variables.  .assays, .rows .cols pronouns outputs depends evaluating context. Users expect underlying data returned .rows .cols pronouns assays context vector, replicated match size assay context. Alternatively, using pronoun either rows() cols() contexts likely return list equal length either nrows(rowData()) nrows(colData()).","code":""},{"path":"https://jtlandis.github.io/biocmask/index.html","id":"feedback","dir":"","previous_headings":"","what":"Feedback","title":"Data masks for SummarizedExperiment enabling dplyr-like manipulation","text":"love hear feedback. Please post Bioconductor support site #tidiness_in_bioc Slack channel community-bioc software usage help, post Issue GitHub, software development questions.","code":""},{"path":"https://jtlandis.github.io/biocmask/index.html","id":"funding","dir":"","previous_headings":"","what":"Funding","title":"Data masks for SummarizedExperiment enabling dplyr-like manipulation","text":"biocmask supported EOSS cycle 6 grant Wellcome Trust.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/BiocmaskManager.html","id":null,"dir":"Reference","previous_headings":"","what":"biocmask Data Mask Manager — BiocmaskManager","title":"biocmask Data Mask Manager — BiocmaskManager","text":"object organizes serveral biocmasks, allowing expressions evaluated different contexts. object return value new_biocmask_manager() \"connectedness\" mask managed object dependent developer. biocmasks passed .mask argument may stem shared environment, may cyclical relationships.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/BiocmaskManager.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"biocmask Data Mask Manager — BiocmaskManager","text":"R6 object inheriting biocmask_manager","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/BiocmaskManager.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"biocmask Data Mask Manager — BiocmaskManager","text":"ctx get set current context ctx_mask get current context biocmask n_groups get current context biocmask group size group_id get set current context biocmask group id masks get private list masks extended environments extended context mask.","code":""},{"path":[]},{"path":"https://jtlandis.github.io/biocmask/reference/BiocmaskManager.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"biocmask Data Mask Manager — BiocmaskManager","text":"biocmask_manager$new() biocmask_manager$along_ctx() biocmask_manager$eval() biocmask_manager$results() biocmask_manager$clone()","code":""},{"path":[]},{"path":"https://jtlandis.github.io/biocmask/reference/BiocmaskManager.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"biocmask Data Mask Manager — BiocmaskManager","text":"","code":"biocmask_manager$new(.data, .masks, .ctx_env, .extended_env)"},{"path":"https://jtlandis.github.io/biocmask/reference/BiocmaskManager.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"biocmask Data Mask Manager — BiocmaskManager","text":".data Original data .masks list named biocmask objects .ctx_env shared context environment .extended_env extended environments","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/BiocmaskManager.html","id":"method-along-ctx-","dir":"Reference","previous_headings":"","what":"Method along_ctx()","title":"biocmask Data Mask Manager — BiocmaskManager","text":"provides sequence iterate groups","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/BiocmaskManager.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"biocmask Data Mask Manager — BiocmaskManager","text":"","code":"biocmask_manager$along_ctx()"},{"path":"https://jtlandis.github.io/biocmask/reference/BiocmaskManager.html","id":"method-eval-","dir":"Reference","previous_headings":"","what":"Method eval()","title":"biocmask Data Mask Manager — BiocmaskManager","text":"eval expression current context","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/BiocmaskManager.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"biocmask Data Mask Manager — BiocmaskManager","text":"","code":"biocmask_manager$eval(quo, env = caller_env())"},{"path":"https://jtlandis.github.io/biocmask/reference/BiocmaskManager.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"biocmask Data Mask Manager — BiocmaskManager","text":"quo quosure quoted expression env environment","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/BiocmaskManager.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"biocmask Data Mask Manager — BiocmaskManager","text":"returns evaluated quo form chop","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/BiocmaskManager.html","id":"method-results-","dir":"Reference","previous_headings":"","what":"Method results()","title":"biocmask Data Mask Manager — BiocmaskManager","text":"collects evaluated results biocmasks","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/BiocmaskManager.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"biocmask Data Mask Manager — BiocmaskManager","text":"","code":"biocmask_manager$results()"},{"path":"https://jtlandis.github.io/biocmask/reference/BiocmaskManager.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"biocmask Data Mask Manager — BiocmaskManager","text":"named list mask containing named list evaluated expressions.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/BiocmaskManager.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"biocmask Data Mask Manager — BiocmaskManager","text":"objects class cloneable method.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/BiocmaskManager.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"biocmask Data Mask Manager — BiocmaskManager","text":"","code":"biocmask_manager$clone(deep = FALSE)"},{"path":"https://jtlandis.github.io/biocmask/reference/BiocmaskManager.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"biocmask Data Mask Manager — BiocmaskManager","text":"deep Whether make deep clone.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/arrange.SummarizedExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"arrange rows or columns — arrange.SummarizedExperiment","title":"arrange rows or columns — arrange.SummarizedExperiment","text":"arrange() orders either rows columns SummarizedExperiment object. Note, guarentee valid SummarizedExperiment returned, arranging assays evaluation context disabled. Unlike dplyr verbs, arrange() largely ignores grouping. SummarizedExperiment method also provides functionality via .by_group argument.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/arrange.SummarizedExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"arrange rows or columns — arrange.SummarizedExperiment","text":"","code":"# S3 method for class 'SummarizedExperiment' arrange(.data, ..., .by_group = FALSE)"},{"path":"https://jtlandis.github.io/biocmask/reference/arrange.SummarizedExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"arrange rows or columns — arrange.SummarizedExperiment","text":".data data frame, data frame extension (e.g. tibble), lazy data frame (e.g. dbplyr dtplyr). See Methods, , details. ... <data-masking> Variables, functions variables. Use desc() sort variable descending order. .by_group TRUE, sort first grouping variable. Applies grouped data frames .","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/arrange.SummarizedExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"arrange rows or columns — arrange.SummarizedExperiment","text":"object inheriting SummarizedExperiment class","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/arrange.SummarizedExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"arrange rows or columns — arrange.SummarizedExperiment","text":"","code":"#arrange within rows/cols contexts separately arrange(se_simple,         rows(direction),         cols(dplyr::desc(condition))) #> # A SummarizedExperiment-tibble Abstraction: 5 × 4 #>     .features .samples | counts logcounts | gene  length direction | sample #>     <chr>     <chr>    |  <int>     <dbl> | <chr>  <int> <chr>     | <chr>  #>   1 row_2     col_3    |      1     0     | g2        24 +         | s3     #>   2 row_3     col_3    |     15     2.71  | g3        60 +         | s3     #>   3 row_5     col_3    |     12     2.48  | g5        37 +         | s3     #>   4 row_1     col_3    |      7     1.95  | g1         1 -         | s3     #>   5 row_4     col_3    |     10     2.30  | g4        39 -         | s3     #>   …   …         …             …       …      …         … …            …     #> n-4 row_2     col_2    |      2     0.693 | g2        24 +         | s2     #> n-3 row_3     col_2    |      6     1.79  | g3        60 +         | s2     #> n-2 row_5     col_2    |     13     2.56  | g5        37 +         | s2     #> n-1 row_1     col_2    |      8     2.08  | g1         1 -         | s2     #> n   row_4     col_2    |     17     2.83  | g4        39 -         | s2     #> # ℹ n = 20 #> # ℹ 1 more variable: condition <chr>  # access assay data to compute arrangement arrange(se_simple,          rows(rowSums(.assays_asis$counts)),         cols(colSums(.assays_asis$counts))) #> # A SummarizedExperiment-tibble Abstraction: 5 × 4 #>     .features .samples | counts logcounts | gene  length direction | sample #>     <chr>     <chr>    |  <int>     <dbl> | <chr>  <int> <chr>     | <chr>  #>   1 row_2     col_4    |      4      1.39 | g2        24 +         | s4     #>   2 row_1     col_4    |      9      2.20 | g1         1 -         | s4     #>   3 row_4     col_4    |      3      1.10 | g4        39 -         | s4     #>   4 row_5     col_4    |      5      1.61 | g5        37 +         | s4     #>   5 row_3     col_4    |     20      3.00 | g3        60 +         | s4     #>   …   …         …             …        …     …         … …            …     #> n-4 row_2     col_1    |     19      2.94 | g2        24 +         | s1     #> n-3 row_1     col_1    |     14      2.64 | g1         1 -         | s1     #> n-2 row_4     col_1    |     11      2.40 | g4        39 -         | s1     #> n-1 row_5     col_1    |     18      2.89 | g5        37 +         | s1     #> n   row_3     col_1    |     16      2.77 | g3        60 +         | s1     #> # ℹ n = 20 #> # ℹ 1 more variable: condition <chr>  # assay context is disabled arrange(se_simple, counts) |> try() #> Error in arrange(se_simple, counts) : Cannot arrange in `assays` context #> ✖ review expression indices 1 in dots #> ℹ consider wrapping expressions in rows(...) or cols(...)  # convert to `data.frame` first as.data.frame(se_simple) |>   arrange(counts) #>    .features .samples counts logcounts gene length direction sample condition #> 1      row_2    col_3      1 0.0000000   g2     24         +     s3      drug #> 2      row_2    col_2      2 0.6931472   g2     24         +     s2     cntrl #> 3      row_4    col_4      3 1.0986123   g4     39         -     s4      drug #> 4      row_2    col_4      4 1.3862944   g2     24         +     s4      drug #> 5      row_5    col_4      5 1.6094379   g5     37         +     s4      drug #> 6      row_3    col_2      6 1.7917595   g3     60         +     s2     cntrl #> 7      row_1    col_3      7 1.9459101   g1      1         -     s3      drug #> 8      row_1    col_2      8 2.0794415   g1      1         -     s2     cntrl #> 9      row_1    col_4      9 2.1972246   g1      1         -     s4      drug #> 10     row_4    col_3     10 2.3025851   g4     39         -     s3      drug #> 11     row_4    col_1     11 2.3978953   g4     39         -     s1     cntrl #> 12     row_5    col_3     12 2.4849066   g5     37         +     s3      drug #> 13     row_5    col_2     13 2.5649494   g5     37         +     s2     cntrl #> 14     row_1    col_1     14 2.6390573   g1      1         -     s1     cntrl #> 15     row_3    col_3     15 2.7080502   g3     60         +     s3      drug #> 16     row_3    col_1     16 2.7725887   g3     60         +     s1     cntrl #> 17     row_4    col_2     17 2.8332133   g4     39         -     s2     cntrl #> 18     row_5    col_1     18 2.8903718   g5     37         +     s1     cntrl #> 19     row_2    col_1     19 2.9444390   g2     24         +     s1     cntrl #> 20     row_3    col_4     20 2.9957323   g3     60         +     s4      drug"},{"path":"https://jtlandis.github.io/biocmask/reference/as.data.frame.html","id":null,"dir":"Reference","previous_headings":"","what":"create data.frame — as.data.frame","title":"create data.frame — as.data.frame","text":"create data.frame","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/as.data.frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create data.frame — as.data.frame","text":"","code":"# S3 method for class 'SummarizedExperiment' as.data.frame(x, ...)"},{"path":"https://jtlandis.github.io/biocmask/reference/as.data.frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create data.frame — as.data.frame","text":"x SummarizedExperiment object ... unused arguments","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/as.data.frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create data.frame — as.data.frame","text":"data.frame object","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/as.data.frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create data.frame — as.data.frame","text":"","code":"as.data.frame(se_simple) #>    .features .samples counts logcounts gene length direction sample condition #> 1      row_1    col_1     14 2.6390573   g1      1         -     s1     cntrl #> 2      row_2    col_1     19 2.9444390   g2     24         +     s1     cntrl #> 3      row_3    col_1     16 2.7725887   g3     60         +     s1     cntrl #> 4      row_4    col_1     11 2.3978953   g4     39         -     s1     cntrl #> 5      row_5    col_1     18 2.8903718   g5     37         +     s1     cntrl #> 6      row_1    col_2      8 2.0794415   g1      1         -     s2     cntrl #> 7      row_2    col_2      2 0.6931472   g2     24         +     s2     cntrl #> 8      row_3    col_2      6 1.7917595   g3     60         +     s2     cntrl #> 9      row_4    col_2     17 2.8332133   g4     39         -     s2     cntrl #> 10     row_5    col_2     13 2.5649494   g5     37         +     s2     cntrl #> 11     row_1    col_3      7 1.9459101   g1      1         -     s3      drug #> 12     row_2    col_3      1 0.0000000   g2     24         +     s3      drug #> 13     row_3    col_3     15 2.7080502   g3     60         +     s3      drug #> 14     row_4    col_3     10 2.3025851   g4     39         -     s3      drug #> 15     row_5    col_3     12 2.4849066   g5     37         +     s3      drug #> 16     row_1    col_4      9 2.1972246   g1      1         -     s4      drug #> 17     row_2    col_4      4 1.3862944   g2     24         +     s4      drug #> 18     row_3    col_4     20 2.9957323   g3     60         +     s4      drug #> 19     row_4    col_4      3 1.0986123   g4     39         -     s4      drug #> 20     row_5    col_4      5 1.6094379   g5     37         +     s4      drug"},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask-context.html","id":null,"dir":"Reference","previous_headings":"","what":"biocmask contexts — biocmask-context","title":"biocmask contexts — biocmask-context","text":"Contextual user-facing helper function dplyr verbs SummarizedExperiment objects. functions intended used top level call dplyr verbs ... argument, similar across()/if_any()/if_all(). Specifies following expressions evaluated within colData context. Specifies following expressions evaluated within rowData context. Specify single expression evaluate another context Specify single expression evaluate another context Specify single expression evaluate another context","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask-context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"biocmask contexts — biocmask-context","text":"","code":"cols(...)  rows(...)  col_ctx(x, asis = FALSE)  row_ctx(x, asis = FALSE)  assay_ctx(x, asis = FALSE)"},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask-context.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"biocmask contexts — biocmask-context","text":"x, ... expressions evaluate within associated context asis asis = FALSE (default) indicate using active bindings attempt coerce underlying data format appropriate current context. Indicating TRUE instead bind underlying data .","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask-context.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"biocmask contexts — biocmask-context","text":"function called side-effects","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask-context.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"biocmask contexts — biocmask-context","text":"","code":"# cols mutate(se_simple,        cols(is_drug = condition==\"drug\"),        #bind a different context        effect = col_ctx(counts + (is_drug * rbinom(n(), 20, .3)))) #> # A SummarizedExperiment-tibble Abstraction: 5 × 4 #>     .features .samples | counts logcounts effect | gene  length direction | #>     <chr>     <chr>    |  <int>     <dbl>  <int> | <chr>  <int> <chr>     | #>   1 row_1     col_1    |     14      2.64     14 | g1         1 -         | #>   2 row_2     col_1    |     19      2.94     19 | g2        24 +         | #>   3 row_3     col_1    |     16      2.77     16 | g3        60 +         | #>   4 row_4     col_1    |     11      2.40     11 | g4        39 -         | #>   5 row_5     col_1    |     18      2.89     18 | g5        37 +         | #>   …   …         …             …        …       …    …         … …           #> n-4 row_1     col_4    |      9      2.20     13 | g1         1 -         | #> n-3 row_2     col_4    |      4      1.39      9 | g2        24 +         | #> n-2 row_3     col_4    |     20      3.00     23 | g3        60 +         | #> n-1 row_4     col_4    |      3      1.10      8 | g4        39 -         | #> n   row_5     col_4    |      5      1.61     15 | g5        37 +         | #> # ℹ n = 20 #> # ℹ 3 more variables: sample <chr>, condition <chr>, is_drug <lgl>"},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask-package.html","id":null,"dir":"Reference","previous_headings":"","what":"biocmask: Data masks for SummarizedExperiment enabling dplyr-like manipulation — biocmask-package","title":"biocmask: Data masks for SummarizedExperiment enabling dplyr-like manipulation — biocmask-package","text":"package provides `rlang` data masks SummarizedExperiment class. enables evaluation unquoted expression different contexts SummarizedExperiment object optional access contexts. goal `biocmask` evaluation feel like data.frame object without ever needing unwind rectangular data.frame.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask-package.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"biocmask: Data masks for SummarizedExperiment enabling dplyr-like manipulation — biocmask-package","text":"API using S4 classes rlang data masks","code":""},{"path":[]},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"biocmask: Data masks for SummarizedExperiment enabling dplyr-like manipulation — biocmask-package","text":"Maintainer: Justin Landis jtlandis314@gmail.com (ORCID) Authors: Michael Love michaelisaiahlove@gmail.com (ORCID)","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask-printing.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing within tibble with S4 objects — vec_phantom","title":"Printing within tibble with S4 objects — vec_phantom","text":"biocmask uses pillar printing. want change S4 object printed within biocmask's print method, consider writing method function. print S4 objects tibble, biocmask hacks custom integer vector built vctrs S4 object lives attribute named \"phantomData\". can create S4 phantom vector vec_phantom(). function used outside printing biocmask default method formatting vec_phantom() call showAsCell().","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask-printing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing within tibble with S4 objects — vec_phantom","text":"","code":"vec_phantom(x)  biocmask_pillar_format(x, ...)"},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask-printing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing within tibble with S4 objects — vec_phantom","text":"x S4 object ... arguments passed pillar_shaft","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask-printing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Printing within tibble with S4 objects — vec_phantom","text":"biocmask_pillar_format -> formatted version S4 vector vec_phantom -> integer vector arbitrary object phatomData attribute.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask-printing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Printing within tibble with S4 objects — vec_phantom","text":"","code":"if(require(\"IRanges\")) {   ilist <- IRanges::IntegerList(list(c(1L,2L,3L),c(5L,6L)))   phantom <- vec_phantom(ilist)   pillar::pillar_shaft(phantom)      biocmask_pillar_format.CompressedIntegerList <- function(x) {    sprintf(\"Int: [%i]\", lengths(x))   }   pillar::pillar_shaft(phantom)   rm(biocmask_pillar_format.CompressedIntegerList) } #> Loading required package: IRanges #> Loading required package: BiocGenerics #>  #> Attaching package: ‘BiocGenerics’ #> The following objects are masked from ‘package:stats’: #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from ‘package:base’: #>  #>     Filter, Find, Map, Position, Reduce, anyDuplicated, aperm, append, #>     as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted, #>     lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin, #>     pmin.int, rank, rbind, rownames, sapply, setdiff, table, tapply, #>     union, unique, unsplit, which.max, which.min #> Loading required package: S4Vectors #> Loading required package: stats4 #>  #> Attaching package: ‘S4Vectors’ #> The following object is masked from ‘package:utils’: #>  #>     findMatches #> The following objects are masked from ‘package:base’: #>  #>     I, expand.grid, unname"},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask.html","id":null,"dir":"Reference","previous_headings":"","what":"biocmask Data Mask Object — biocmask","title":"biocmask Data Mask Object — biocmask","text":"R6 Object tracks bindings list-like object. includes DFrame objects. several inherited environments data stored within. Environments: .shared_env –> curr_group_ctx –> foreign –> lazy –> chops –> active_mask .shared_env : environment provided initialization. may shared multiple BiocDataMasks. curr_group  : Currently used. foreign     : space put foreign bindings, .e. object unrelated .data provided initialization. space currently used place pronouns related contexts. lazy        : strict lazy binding data within .data. binding made initialization. chops       : lazy data chopped list .indices. New bindings BiocDataMask context expected \"chopped\" format assigned . active_mask : active binding chops proper list index used depending current group context. current group context moment determined .shared_env curr_group. plans remove curr_group environment.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"biocmask Data Mask Object — biocmask","text":"R6 object class biocmask","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"biocmask Data Mask Object — biocmask","text":"environments hierarchy environments mask names associated names data mask ptype get zero-length slices underlying data added newly added names mask holds grouping information object foreign bindings","code":""},{"path":[]},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"biocmask Data Mask Object — biocmask","text":"biocmask$new() biocmask$on_bind() biocmask$bind() biocmask$unchop() biocmask$results() biocmask$eval()","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"biocmask Data Mask Object — biocmask","text":"Create biocmask .data. .data chopped .indices, environments built .env","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"biocmask Data Mask Object — biocmask","text":"","code":"biocmask$new(.data, .indices = NULL, .env_bot, .env_top = .env_bot)"},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"biocmask Data Mask Object — biocmask","text":".data named list like object create mask .indices indices used chop .data .env_bot environment resulting mask built . .env_top environment .env_bot inherits ","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask.html","id":"method-on-bind-","dir":"Reference","previous_headings":"","what":"Method on_bind()","title":"biocmask Data Mask Object — biocmask","text":"appends callback function executed value bound mask. Mainly used inform masks new values","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"biocmask Data Mask Object — biocmask","text":"","code":"biocmask$on_bind(.fun)"},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"biocmask Data Mask Object — biocmask","text":".fun function created add_bind()","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask.html","id":"method-bind-","dir":"Reference","previous_headings":"","what":"Method bind()","title":"biocmask Data Mask Object — biocmask","text":"binds value name within chops environment.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"biocmask Data Mask Object — biocmask","text":"","code":"biocmask$bind(name, value)"},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"biocmask Data Mask Object — biocmask","text":"name character scalar value results $eval form chops","code":""},{"path":[]},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"biocmask Data Mask Object — biocmask","text":"","code":"biocmask$unchop(name)"},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"biocmask Data Mask Object — biocmask","text":"name name binding retrieve unchop","code":""},{"path":[]},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"biocmask Data Mask Object — biocmask","text":"","code":"biocmask$results()"},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"biocmask Data Mask Object — biocmask","text":"named list evaluated expression, unchopped","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask.html","id":"method-eval-","dir":"Reference","previous_headings":"","what":"Method eval()","title":"biocmask Data Mask Object — biocmask","text":"evaluates quoted expression within new datamask","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"biocmask Data Mask Object — biocmask","text":"","code":"biocmask$eval(quo, env = caller_env())"},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"biocmask Data Mask Object — biocmask","text":"quo quosure evaluate env environment search mask","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"biocmask Data Mask Object — biocmask","text":"","code":"# note: this R6 class is not exported at this moment  mask <- getNamespace(\"biocmask\")$biocmask$new(iris,                      .env_bot = rlang::env(`biocmask:::ctx:::group_id` = 1L)) mask$eval(quote(Sepal.Width)) #>   [1] 3.5 3.0 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 3.7 3.4 3.0 3.0 4.0 4.4 3.9 3.5 #>  [19] 3.8 3.8 3.4 3.7 3.6 3.3 3.4 3.0 3.4 3.5 3.4 3.2 3.1 3.4 4.1 4.2 3.1 3.2 #>  [37] 3.5 3.6 3.0 3.4 3.5 2.3 3.2 3.5 3.8 3.0 3.8 3.2 3.7 3.3 3.2 3.2 3.1 2.3 #>  [55] 2.8 2.8 3.3 2.4 2.9 2.7 2.0 3.0 2.2 2.9 2.9 3.1 3.0 2.7 2.2 2.5 3.2 2.8 #>  [73] 2.5 2.8 2.9 3.0 2.8 3.0 2.9 2.6 2.4 2.4 2.7 2.7 3.0 3.4 3.1 2.3 3.0 2.5 #>  [91] 2.6 3.0 2.6 2.3 2.7 3.0 2.9 2.9 2.5 2.8 3.3 2.7 3.0 2.9 3.0 3.0 2.5 2.9 #> [109] 2.5 3.6 3.2 2.7 3.0 2.5 2.8 3.2 3.0 3.8 2.6 2.2 3.2 2.8 2.8 2.7 3.3 3.2 #> [127] 2.8 3.0 2.8 3.0 2.8 3.8 2.8 2.8 2.6 3.0 3.4 3.1 3.0 3.1 3.1 3.1 2.7 3.2 #> [145] 3.3 3.0 2.5 3.0 3.4 3.0"},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask_quos.html","id":null,"dir":"Reference","previous_headings":"","what":"biocmask quosures — biocmask_quos","title":"biocmask quosures — biocmask_quos","text":"consistent way handle ... dplyr extensions. returns list quosures quosure contains attribute biocmask:::ctx indicating mask context evaluate .","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask_quos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"biocmask quosures — biocmask_quos","text":"","code":"biocmask_quos(..., .named = TRUE, .ctx_default = NULL, .ctx_opt = NULL)"},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask_quos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"biocmask quosures — biocmask_quos","text":"... rlang dots, supports splicing quoting .named resulting expressions named? .ctx_default default context eval within .ctx_opt optional contexts eval within","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask_quos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"biocmask quosures — biocmask_quos","text":"quosure attribute biocmask:::ctx.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/biocmask_quos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"biocmask quosures — biocmask_quos","text":"","code":"# in biocmask the default context is \"assays\" # and optional contexts are \"rows\" and \"cols\" quos <- biocmask_quos(   foo = bar,   ctx2(foo = bar),   ctx3(foo = bar),   .ctx_default = \"ctx1\",   .ctx_opt = c(\"ctx2\", \"ctx3\") ) attr(quos[[1]], \"biocmask:::ctx\") #> [1] \"ctx1\" attr(quos[[2]], \"biocmask:::ctx\") #> [1] \"ctx2\" attr(quos[[3]], \"biocmask:::ctx\") #> [1] \"ctx3\""},{"path":"https://jtlandis.github.io/biocmask/reference/dot-pronouns.html","id":null,"dir":"Reference","previous_headings":"","what":"contextual biocmask pronouns — dot-pronouns","title":"contextual biocmask pronouns — dot-pronouns","text":"biocmask utilizes version rlang::.data pronouns. may used gain access evaluation contexts managed set data-masks. Similar rlang::.data, biocmask::.assays exported pronouns exported pass R CMD Checks. using biocmask within package, import associated pronoun biocmask use fully unqualified name, .assays, .assays_asis, etc.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/dot-pronouns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"contextual biocmask pronouns — dot-pronouns","text":"","code":".assays  .assays_asis  .rows  .rows_asis  .cols  .cols_asis"},{"path":"https://jtlandis.github.io/biocmask/reference/dot-pronouns.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"contextual biocmask pronouns — dot-pronouns","text":"object class NULL length 0. object class NULL length 0. object class NULL length 0. object class NULL length 0. object class NULL length 0. object class NULL length 0.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/dot-pronouns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"contextual biocmask pronouns — dot-pronouns","text":"access specific values behind rlang pronoun","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/dot-pronouns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"contextual biocmask pronouns — dot-pronouns","text":"","code":"mutate(se_simple,        # access via pronoun        rows(sum = rowSums(.assays_asis$counts)),        cols(sum = vapply(.assays$counts, sum, numeric(1)))) #> # A SummarizedExperiment-tibble Abstraction: 5 × 4 #>     .features .samples | counts logcounts | gene  length direction   sum | #>     <chr>     <chr>    |  <int>     <dbl> | <chr>  <int> <chr>     <dbl> | #>   1 row_1     col_1    |     14      2.64 | g1         1 -            38 | #>   2 row_2     col_1    |     19      2.94 | g2        24 +            26 | #>   3 row_3     col_1    |     16      2.77 | g3        60 +            57 | #>   4 row_4     col_1    |     11      2.40 | g4        39 -            41 | #>   5 row_5     col_1    |     18      2.89 | g5        37 +            48 | #>   …   …         …             …        …     …         … …             …   #> n-4 row_1     col_4    |      9      2.20 | g1         1 -            38 | #> n-3 row_2     col_4    |      4      1.39 | g2        24 +            26 | #> n-2 row_3     col_4    |     20      3.00 | g3        60 +            57 | #> n-1 row_4     col_4    |      3      1.10 | g4        39 -            41 | #> n   row_5     col_4    |      5      1.61 | g5        37 +            48 | #> # ℹ n = 20 #> # ℹ 3 more variables: sample <chr>, condition <chr>, sum <dbl>"},{"path":"https://jtlandis.github.io/biocmask/reference/filter.SummarizedExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter SummarizedExperiment — filter.SummarizedExperiment","title":"Filter SummarizedExperiment — filter.SummarizedExperiment","text":"filter() function sused subset object, returing observations satisfy conditions. observation must return TRUE conditions within context retained. Note, guarantee valid SummarizedExperiment returned, filtering assays evaluation context disabled.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/filter.SummarizedExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter SummarizedExperiment — filter.SummarizedExperiment","text":"","code":"# S3 method for class 'SummarizedExperiment' filter(.data, ..., .preserve = FALSE)"},{"path":"https://jtlandis.github.io/biocmask/reference/filter.SummarizedExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter SummarizedExperiment — filter.SummarizedExperiment","text":".data SummarizedExperiment object ... conditions filter . must wrapped cols() rows() .preserve Relevant .data input grouped. .preserve = FALSE (default), grouping structure recalculated based resulting data, .e. number groups may change.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/filter.SummarizedExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter SummarizedExperiment — filter.SummarizedExperiment","text":"object inheriting SummarizedExperiment class","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/filter.SummarizedExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter SummarizedExperiment — filter.SummarizedExperiment","text":"","code":"# example code filter(se_simple,        rows(length > 30),        cols(condition == \"drug\")) #> # A SummarizedExperiment-tibble Abstraction: 3 × 2 #>   .features .samples | counts logcounts | gene  length direction | sample #>   <chr>     <chr>    |  <int>     <dbl> | <chr>  <int> <chr>     | <chr>  #> 1 row_3     col_3    |     15      2.71 | g3        60 +         | s3     #> 2 row_4     col_3    |     10      2.30 | g4        39 -         | s3     #> 3 row_5     col_3    |     12      2.48 | g5        37 +         | s3     #> 4 row_3     col_4    |     20      3.00 | g3        60 +         | s4     #> 5 row_4     col_4    |      3      1.10 | g4        39 -         | s4     #> 6 row_5     col_4    |      5      1.61 | g5        37 +         | s4     #> # ℹ 1 more variable: condition <chr>   filter(se_simple,        rows(rowSums(.assays_asis$counts) > 40),        cols(colSums(.assays_asis$counts) < 50)) #> # A SummarizedExperiment-tibble Abstraction: 3 × 3 #>   .features .samples | counts logcounts | gene  length direction | sample #>   <chr>     <chr>    |  <int>     <dbl> | <chr>  <int> <chr>     | <chr>  #> 1 row_3     col_2    |      6      1.79 | g3        60 +         | s2     #> 2 row_4     col_2    |     17      2.83 | g4        39 -         | s2     #> 3 row_5     col_2    |     13      2.56 | g5        37 +         | s2     #> 4 row_3     col_3    |     15      2.71 | g3        60 +         | s3     #> 5 row_4     col_3    |     10      2.30 | g4        39 -         | s3     #> 6 row_5     col_3    |     12      2.48 | g5        37 +         | s3     #> 7 row_3     col_4    |     20      3.00 | g3        60 +         | s4     #> 8 row_4     col_4    |      3      1.10 | g4        39 -         | s4     #> 9 row_5     col_4    |      5      1.61 | g5        37 +         | s4     #> # ℹ 1 more variable: condition <chr>  # assay context is disabled filter(se_simple,        counts > 12) |> try() #> Error in filter(se_simple, counts > 12) :  #>   Cannot filter in `assays` context #> ✖ review expression indices 1 in dots #> ℹ consider wrapping expressions in rows(...) or cols(...)  # convert to `data.frame` first as.data.frame(se_simple) |>   filter(counts > 12) #> Error in as.vector(x): no method for coercing this S4 class to a vector"},{"path":"https://jtlandis.github.io/biocmask/reference/group_by.SummarizedExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"apply groups to SummarizedExperiments — group_by.SummarizedExperiment","title":"apply groups to SummarizedExperiments — group_by.SummarizedExperiment","text":"create grouping variables rowData colData SummarizedExperiment object. Unlike data.frame method resulting output class left unchanged. Thus dplyr generics SummarizedExperiment must check grouping information manually.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/group_by.SummarizedExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"apply groups to SummarizedExperiments — group_by.SummarizedExperiment","text":"","code":"# S3 method for class 'SummarizedExperiment' group_by(.data, ..., .add = FALSE)  # S3 method for class 'SummarizedExperiment' ungroup(x, ...)"},{"path":"https://jtlandis.github.io/biocmask/reference/group_by.SummarizedExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"apply groups to SummarizedExperiments — group_by.SummarizedExperiment","text":".data SummarizedExperiment object ... contextual expressions specifying columns ungroup. Omitting ... ungroups entire object. .add FALSE, default, group_by() override existing groups. x SummarizedExperiment object","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/group_by.SummarizedExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"apply groups to SummarizedExperiments — group_by.SummarizedExperiment","text":"SummarizedExperiment object","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/group_by.SummarizedExperiment.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"apply groups to SummarizedExperiments — group_by.SummarizedExperiment","text":"ungroup(SummarizedExperiment): Ungroup SummarizedExperiment object","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/group_by.SummarizedExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"apply groups to SummarizedExperiments — group_by.SummarizedExperiment","text":"","code":"group_by(se_simple, rows(direction), cols(condition)) #> # A SummarizedExperiment-tibble Abstraction: 5 × 4 #> # Groups: rows(direction), cols(condition) #>     .features .samples | counts logcounts | direction gene  length | condition #>     <chr>     <chr>    |  <int>     <dbl> | <chr>     <chr>  <int> | <chr>     #>   1 row_1     col_1    |     14      2.64 | -         g1         1 | cntrl     #>   2 row_2     col_1    |     19      2.94 | +         g2        24 | cntrl     #>   3 row_3     col_1    |     16      2.77 | +         g3        60 | cntrl     #>   4 row_4     col_1    |     11      2.40 | -         g4        39 | cntrl     #>   5 row_5     col_1    |     18      2.89 | +         g5        37 | cntrl     #>   …   …         …             …        …    …          …         …     …       #> n-4 row_1     col_4    |      9      2.20 | -         g1         1 | drug      #> n-3 row_2     col_4    |      4      1.39 | +         g2        24 | drug      #> n-2 row_3     col_4    |     20      3.00 | +         g3        60 | drug      #> n-1 row_4     col_4    |      3      1.10 | -         g4        39 | drug      #> n   row_5     col_4    |      5      1.61 | +         g5        37 | drug      #> # ℹ n = 20 #> # ℹ 1 more variable: sample <chr>"},{"path":"https://jtlandis.github.io/biocmask/reference/group_data-SummarizedExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"get grouping data — group_data-SummarizedExperiment","title":"get grouping data — group_data-SummarizedExperiment","text":"retrieve grouping information SummarizedExperiment object. stored within metadata() object.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/group_data-SummarizedExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get grouping data — group_data-SummarizedExperiment","text":"","code":"# S3 method for class 'SummarizedExperiment' group_data(.data)"},{"path":"https://jtlandis.github.io/biocmask/reference/group_data-SummarizedExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get grouping data — group_data-SummarizedExperiment","text":".data object","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/group_data-SummarizedExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get grouping data — group_data-SummarizedExperiment","text":"list groupings SummarizedExperiment","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/group_data-SummarizedExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get grouping data — group_data-SummarizedExperiment","text":"","code":"group_by(se_simple, rows(direction), cols(condition)) |> group_data() #> $row_groups #> # A tibble: 2 × 3 #>   direction .indices  .indices_group_id #>   <chr>     <list>                <int> #> 1 -         <int [2]>                 1 #> 2 +         <int [3]>                 2 #>  #> $col_groups #> # A tibble: 2 × 3 #>   condition .indices  .indices_group_id #>   <chr>     <list>                <int> #> 1 cntrl     <int [2]>                 1 #> 2 drug      <int [2]>                 2 #>  #> attr(,\"class\") #> [1] \"biocmask_groups\" #> attr(,\"type\") #> [1] \"rowcol\""},{"path":"https://jtlandis.github.io/biocmask/reference/mutate.SummarizedExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Mutate a SummarizedExperiment object — mutate.SummarizedExperiment","title":"Mutate a SummarizedExperiment object — mutate.SummarizedExperiment","text":"Mutate SummarizedExperiment object data mask. Unlike dplyr implementations, contextual evaluations mutate() SummarizedExperiment valid.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/mutate.SummarizedExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mutate a SummarizedExperiment object — mutate.SummarizedExperiment","text":"","code":"# S3 method for class 'SummarizedExperiment' mutate(.data, ...)"},{"path":"https://jtlandis.github.io/biocmask/reference/mutate.SummarizedExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mutate a SummarizedExperiment object — mutate.SummarizedExperiment","text":".data objecting inheriting SummarizedExperiment class ... expressions evaluate","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/mutate.SummarizedExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mutate a SummarizedExperiment object — mutate.SummarizedExperiment","text":"object inheriting SummarizedExperiment class","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/mutate.SummarizedExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mutate a SummarizedExperiment object — mutate.SummarizedExperiment","text":"","code":"mutate(se_simple,     counts_1 = counts + 1,     logp_counts = log(counts_1),     # access assays context with \".assays\" pronoun,     # note that assays are sliced into a list to      # fit dimensions of cols context     cols(sum = purrr::map_dbl(.assays$counts, sum)),     # access assays context \"asis\" with the same pronoun     # but with a \"_asis\" suffix.     rows(sum = rowSums(.assays_asis$counts)) ) #> # A SummarizedExperiment-tibble Abstraction: 5 × 4 #>     .features .samples | counts logcounts counts_1 logp_counts | gene  length #>     <chr>     <chr>    |  <int>     <dbl>    <dbl>       <dbl> | <chr>  <int> #>   1 row_1     col_1    |     14      2.64       15        2.71 | g1         1 #>   2 row_2     col_1    |     19      2.94       20        3.00 | g2        24 #>   3 row_3     col_1    |     16      2.77       17        2.83 | g3        60 #>   4 row_4     col_1    |     11      2.40       12        2.48 | g4        39 #>   5 row_5     col_1    |     18      2.89       19        2.94 | g5        37 #>   …   …         …             …        …         …          …     …         … #> n-4 row_1     col_4    |      9      2.20       10        2.30 | g1         1 #> n-3 row_2     col_4    |      4      1.39        5        1.61 | g2        24 #> n-2 row_3     col_4    |     20      3.00       21        3.04 | g3        60 #> n-1 row_4     col_4    |      3      1.10        4        1.39 | g4        39 #> n   row_5     col_4    |      5      1.61        6        1.79 | g5        37 #> # ℹ n = 20 #> # ℹ 6 more variables: direction <chr>, sum <dbl>, `` <>, sample <chr>, #> #   condition <chr>, sum <dbl>"},{"path":"https://jtlandis.github.io/biocmask/reference/new_biocmask_manager.html","id":null,"dir":"Reference","previous_headings":"","what":"New Biocmask — new_biocmask_manager","title":"New Biocmask — new_biocmask_manager","text":"Create biocmask object","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/new_biocmask_manager.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"New Biocmask — new_biocmask_manager","text":"","code":"new_biocmask_manager(obj, ...)  # S3 method for class 'SummarizedExperiment' new_biocmask_manager(obj, ...)"},{"path":"https://jtlandis.github.io/biocmask/reference/new_biocmask_manager.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"New Biocmask — new_biocmask_manager","text":"obj Dispatch Object ... used","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/new_biocmask_manager.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"New Biocmask — new_biocmask_manager","text":"biocmask_manager R6 class object","code":""},{"path":[]},{"path":"https://jtlandis.github.io/biocmask/reference/new_biocmask_manager.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"New Biocmask — new_biocmask_manager","text":"","code":"manager <- new_biocmask_manager(se_simple) manager$ctx #> [1] \"assays\" q <- biocmask_quos(counts_1 = counts + 1,                    cols(is_drug = condition==\"drug\"),                    .ctx_default = \"assays\",                    .ctx_opt = c(\"rows\", \"cols\")) manager$eval(q[[1]]) manager$results() #> $assays #> $assays$counts_1 #>      [,1] [,2] [,3] [,4] #> [1,]   15    9    8   10 #> [2,]   20    3    2    5 #> [3,]   17    7   16   21 #> [4,]   12   18   11    4 #> [5,]   19   14   13    6 #>  #>  #> $rows #> named list() #>  #> $cols #> named list() #>  #evaluating second quo without switching contexts will error manager$eval(q[[2]]) |> try() #> Error : object 'condition' not found manager$ctx <- \"cols\" manager$ctx #> [1] \"cols\" manager$eval(q[[2]]) manager$results() #> $assays #> $assays$counts_1 #>      [,1] [,2] [,3] [,4] #> [1,]   15    9    8   10 #> [2,]   20    3    2    5 #> [3,]   17    7   16   21 #> [4,]   12   18   11    4 #> [5,]   19   14   13    6 #>  #>  #> $rows #> named list() #>  #> $cols #> $cols$is_drug #> [1] FALSE FALSE  TRUE  TRUE #>  #>"},{"path":"https://jtlandis.github.io/biocmask/reference/pull.SummarizedExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"extract data from object — pull.SummarizedExperiment","title":"extract data from object — pull.SummarizedExperiment","text":"similar dplyr::pull.data.frame except allows extract objects different contexts.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/pull.SummarizedExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract data from object — pull.SummarizedExperiment","text":"","code":"# S3 method for class 'SummarizedExperiment' pull(.data, var = -1, name = NULL, ...)"},{"path":"https://jtlandis.github.io/biocmask/reference/pull.SummarizedExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract data from object — pull.SummarizedExperiment","text":".data SummarizedExperiment object var variable specified dplyr::pull name ignored argument. Due range data types SummarizedExperiment argument supported ... unused argument","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/pull.SummarizedExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract data from object — pull.SummarizedExperiment","text":"element either assays, rowData, colData SummarizedExperiment object","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/pull.SummarizedExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"extract data from object — pull.SummarizedExperiment","text":"","code":"# last element of default context (assays) pull(se_simple, var = -1) #>          col_1     col_2    col_3    col_4 #> row_1 2.639057 2.0794415 1.945910 2.197225 #> row_2 2.944439 0.6931472 0.000000 1.386294 #> row_3 2.772589 1.7917595 2.708050 2.995732 #> row_4 2.397895 2.8332133 2.302585 1.098612 #> row_5 2.890372 2.5649494 2.484907 1.609438 # first element of rows context pull(se_simple, var = rows(1)) #> [1] \"g1\" \"g2\" \"g3\" \"g4\" \"g5\" # element from col context by literal variable name pull(se_simple, var = cols(condition)) #> [1] \"cntrl\" \"cntrl\" \"drug\"  \"drug\"   # use `pull()` to return contextual info mutate(se_simple, rows(counts = .assays$counts)) |>   # get last stored element   pull(rows(-1)) #> [[1]] #> col_1 col_2 col_3 col_4  #>    14     8     7     9  #>  #> [[2]] #> col_1 col_2 col_3 col_4  #>    19     2     1     4  #>  #> [[3]] #> col_1 col_2 col_3 col_4  #>    16     6    15    20  #>  #> [[4]] #> col_1 col_2 col_3 col_4  #>    11    17    10     3  #>  #> [[5]] #> col_1 col_2 col_3 col_4  #>    18    13    12     5  #>"},{"path":"https://jtlandis.github.io/biocmask/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. S4Vectors metadata, metadata<- SummarizedExperiment SummarizedExperiment, assay, assay<-, assays, assays<-, colData, colData<-, rowData, rowData<- dplyr arrange, filter, group_by, group_data, group_vars, mutate, pull, select, summarise, ungroup","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/reexports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Objects exported from other packages — reexports","text":"exported functions available biocmask","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/se_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Biocmask Simple Example Summarized Experiment — se_simple","title":"Biocmask Simple Example Summarized Experiment — se_simple","text":"small data SummarizedExperiment Object 20 observations, 5 rows 4 columns.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/se_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Biocmask Simple Example Summarized Experiment — se_simple","text":"","code":"se_simple"},{"path":[]},{"path":"https://jtlandis.github.io/biocmask/reference/se_simple.html","id":"se-simple","dir":"Reference","previous_headings":"","what":"se_simple","title":"Biocmask Simple Example Summarized Experiment — se_simple","text":"assays counts sampled data points 1:20 logcounts log transform counts rowData/.features gene fake gene name length fake gene length direction fake strand colData/.samples sample fake sample name condition control drug treatment","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/se_simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Biocmask Simple Example Summarized Experiment — se_simple","text":"SummarizedExperiment object","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/se_simple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Biocmask Simple Example Summarized Experiment — se_simple","text":"","code":"SummarizedExperiment::assays(se_simple) #> List of length 2 #> names(2): counts logcounts SummarizedExperiment::rowData(se_simple) #> DataFrame with 5 rows and 3 columns #>              gene    length   direction #>       <character> <integer> <character> #> row_1          g1         1           - #> row_2          g2        24           + #> row_3          g3        60           + #> row_4          g4        39           - #> row_5          g5        37           + SummarizedExperiment::colData(se_simple) #> DataFrame with 4 rows and 2 columns #>            sample   condition #>       <character> <character> #> col_1          s1       cntrl #> col_2          s2       cntrl #> col_3          s3        drug #> col_4          s4        drug"},{"path":"https://jtlandis.github.io/biocmask/reference/select.SummarizedExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"select assays, rowData, and colData names — select.SummarizedExperiment","title":"select assays, rowData, and colData names — select.SummarizedExperiment","text":"Select one values context. default omitting expression context selecting NOTHING context. <tidy-select> implementation within biocmask almost similar dplyr except used within across() function. used accross(), data provided eval_select zero length slice data. intentional choice prevent evaluation potentionally expensive chopping operations S4Vectors. means predicate function () able query original data.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/select.SummarizedExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"select assays, rowData, and colData names — select.SummarizedExperiment","text":"","code":"# S3 method for class 'SummarizedExperiment' select(.data, ...)"},{"path":"https://jtlandis.github.io/biocmask/reference/select.SummarizedExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"select assays, rowData, and colData names — select.SummarizedExperiment","text":".data SummarizedExperiment object ... <tidy-select> one selection expressions. Supports wrapping expressions within <biocmask-contexts>.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/select.SummarizedExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"select assays, rowData, and colData names — select.SummarizedExperiment","text":"object inheriting SummarizedExperiment class","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/select.SummarizedExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"select assays, rowData, and colData names — select.SummarizedExperiment","text":"","code":"# only keep assays, other contexts are dropped select(se_simple, everything()) #> # A SummarizedExperiment-tibble Abstraction: 5 × 4 #>     .features .samples | counts logcounts | | #>     <chr>     <chr>    |  <int>     <dbl> | | #>   1 row_1     col_1    |     14      2.64 | | #>   2 row_2     col_1    |     19      2.94 | | #>   3 row_3     col_1    |     16      2.77 | | #>   4 row_4     col_1    |     11      2.40 | | #>   5 row_5     col_1    |     18      2.89 | | #>   …   …         …             …        …      #> n-4 row_1     col_4    |      9      2.20 | | #> n-3 row_2     col_4    |      4      1.39 | | #> n-2 row_3     col_4    |     20      3.00 | | #> n-1 row_4     col_4    |      3      1.10 | | #> n   row_5     col_4    |      5      1.61 | | #> # ℹ n = 20  # only keep rowData, other contexts are dropped select(se_simple, rows(everything())) #> # A SummarizedExperiment-tibble Abstraction: 5 × 4 #>     .features .samples | | gene  length direction | #>     <chr>     <chr>    | | <chr>  <int> <chr>     | #>   1 row_1     col_1    | | g1         1 -         | #>   2 row_2     col_1    | | g2        24 +         | #>   3 row_3     col_1    | | g3        60 +         | #>   4 row_4     col_1    | | g4        39 -         | #>   5 row_5     col_1    | | g5        37 +         | #>   …   …         …           …         … …           #> n-4 row_1     col_4    | | g1         1 -         | #> n-3 row_2     col_4    | | g2        24 +         | #> n-2 row_3     col_4    | | g3        60 +         | #> n-1 row_4     col_4    | | g4        39 -         | #> n   row_5     col_4    | | g5        37 +         | #> # ℹ n = 20  select(se_simple, rows(where(is.numeric))) #> # A SummarizedExperiment-tibble Abstraction: 5 × 4 #>     .features .samples | | length | #>     <chr>     <chr>    | |  <int> | #>   1 row_1     col_1    | |      1 | #>   2 row_2     col_1    | |     24 | #>   3 row_3     col_1    | |     60 | #>   4 row_4     col_1    | |     39 | #>   5 row_5     col_1    | |     37 | #>   …   …         …               …   #> n-4 row_1     col_4    | |      1 | #> n-3 row_2     col_4    | |     24 | #> n-2 row_3     col_4    | |     60 | #> n-1 row_4     col_4    | |     39 | #> n   row_5     col_4    | |     37 | #> # ℹ n = 20  # Note on `where()` clause, all data is available within select select(se_simple, rows(where(~any(grepl(\"-\", .x))))) #> # A SummarizedExperiment-tibble Abstraction: 5 × 4 #>     .features .samples | | direction | #>     <chr>     <chr>    | | <chr>     | #>   1 row_1     col_1    | | -         | #>   2 row_2     col_1    | | +         | #>   3 row_3     col_1    | | +         | #>   4 row_4     col_1    | | -         | #>   5 row_5     col_1    | | +         | #>   …   …         …          …           #> n-4 row_1     col_4    | | -         | #> n-3 row_2     col_4    | | +         | #> n-2 row_3     col_4    | | +         | #> n-1 row_4     col_4    | | -         | #> n   row_5     col_4    | | +         | #> # ℹ n = 20  # within an `across()`, only a zero-length slice avialble, so the # `where()` predicate cannot access the data mutate(se_simple,        rows(         across(where(~any(grepl(\"-\", .x))),                ~sprintf(\"%s foo\", .x)))) #> # A SummarizedExperiment-tibble Abstraction: 5 × 4 #>     .features .samples | counts logcounts | gene  length direction | sample #>     <chr>     <chr>    |  <int>     <dbl> | <chr>  <int> <chr>     | <chr>  #>   1 row_1     col_1    |     14      2.64 | g1         1 -         | s1     #>   2 row_2     col_1    |     19      2.94 | g2        24 +         | s1     #>   3 row_3     col_1    |     16      2.77 | g3        60 +         | s1     #>   4 row_4     col_1    |     11      2.40 | g4        39 -         | s1     #>   5 row_5     col_1    |     18      2.89 | g5        37 +         | s1     #>   …   …         …             …        …     …         … …            …     #> n-4 row_1     col_4    |      9      2.20 | g1         1 -         | s4     #> n-3 row_2     col_4    |      4      1.39 | g2        24 +         | s4     #> n-2 row_3     col_4    |     20      3.00 | g3        60 +         | s4     #> n-1 row_4     col_4    |      3      1.10 | g4        39 -         | s4     #> n   row_5     col_4    |      5      1.61 | g5        37 +         | s4     #> # ℹ n = 20 #> # ℹ 1 more variable: condition <chr> # here is an acceptable usage of the `where()` predicate mutate(se_simple,        rows(         across(where(is.character),                ~sprintf(\"%s foo\", .x)))) #> # A SummarizedExperiment-tibble Abstraction: 5 × 4 #>     .features .samples | counts logcounts | gene   length direction | sample #>     <chr>     <chr>    |  <int>     <dbl> | <chr>   <int> <chr>     | <chr>  #>   1 row_1 foo col_1    |     14      2.64 | g1 foo      1 - foo     | s1     #>   2 row_2 foo col_1    |     19      2.94 | g2 foo     24 + foo     | s1     #>   3 row_3 foo col_1    |     16      2.77 | g3 foo     60 + foo     | s1     #>   4 row_4 foo col_1    |     11      2.40 | g4 foo     39 - foo     | s1     #>   5 row_5 foo col_1    |     18      2.89 | g5 foo     37 + foo     | s1     #>   …   …    …    …             …        …     …  …       … …  …         …     #> n-4 row_1 foo col_4    |      9      2.20 | g1 foo      1 - foo     | s4     #> n-3 row_2 foo col_4    |      4      1.39 | g2 foo     24 + foo     | s4     #> n-2 row_3 foo col_4    |     20      3.00 | g3 foo     60 + foo     | s4     #> n-1 row_4 foo col_4    |      3      1.10 | g4 foo     39 - foo     | s4     #> n   row_5 foo col_4    |      5      1.61 | g5 foo     37 + foo     | s4     #> # ℹ n = 20 #> # ℹ 1 more variable: condition <chr>"},{"path":"https://jtlandis.github.io/biocmask/reference/summarise.SummarizedExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize SummarizedExperiment — summarise.SummarizedExperiment","title":"Summarize SummarizedExperiment — summarise.SummarizedExperiment","text":"Summarize SummarizedExperiment","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/summarise.SummarizedExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize SummarizedExperiment — summarise.SummarizedExperiment","text":"","code":"# S3 method for class 'SummarizedExperiment' summarise(.data, ..., .retain = c(\"auto\", \"ungrouped\", \"none\"))"},{"path":"https://jtlandis.github.io/biocmask/reference/summarise.SummarizedExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize SummarizedExperiment — summarise.SummarizedExperiment","text":".data SummarizedExperiment object, ... expressions summarize object .retain argument controls rowData() colData() retained summarizing. \"auto\" (default), .retain behavior depends groupings .data. exactly one dimension grouped, \"auto\" behaves like \"ungrouped-dim\", \"none\" otherwise. \"ungrouped-dim\", ungrouped dimension's data retained resulting SummarizedExperiment object scalar outputs recycled length ungrouped dimension. \"none\", outputs expected scalar computed values retained rowData() colData()","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/summarise.SummarizedExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize SummarizedExperiment — summarise.SummarizedExperiment","text":"object inheriting SummarizedExperiment class","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/summarise.SummarizedExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize SummarizedExperiment — summarise.SummarizedExperiment","text":"","code":"# outputs in assay context may be either # length 1, or the length of the ungrouped # dimension while .retain = \"auto\"/\"ungrouped-dim\" se_simple |>   group_by(rows(direction)) |>   summarise(col_sums = colSums(counts),             sample = sample(1:20, 1L)) #> # A SummarizedExperiment-tibble Abstraction: 2 × 4 #> # Groups: rows(direction) #>   .features .samples | col_sums sample | direction | sample condition #>       <int> <chr>    |    <dbl>  <int> | <chr>     | <chr>  <chr>     #> 1         1 col_1    |       25     11 | -         | s1     cntrl     #> 2         2 col_1    |       25     11 | +         | s1     cntrl     #> 3         1 col_2    |       17     11 | -         | s2     cntrl     #> 4         2 col_2    |       12     11 | +         | s2     cntrl     #> 5         1 col_3    |       53     11 | -         | s3     drug      #> 6         2 col_3    |       21     11 | +         | s3     drug      #> 7         1 col_4    |       28     11 | -         | s4     drug      #> 8         2 col_4    |       29     11 | +         | s4     drug       # .retain = \"none\" will drop ungrouped dimensions and # outputs of assay context should be length 1. se_simple |>   group_by(rows(direction)) |>   summarise(col_sums = list(colSums(counts)),             .retain = \"none\") #> # A SummarizedExperiment-tibble Abstraction: 2 × 1 #> # Groups: rows(direction) #>   .features .samples | col_sums  | direction | #>       <int>    <int> | <list>    | <chr>     | #> 1         1        1 | <dbl [4]> | -         | #> 2         2        1 | <dbl [4]> | +         |  # using an `across()` function will help # nest ungrouped dimensions se_simple |>   group_by(rows(direction)) |>   summarise(col_sums = list(colSums(counts)),             cols(across(everything(), list)),              .retain = \"none\") #> # A SummarizedExperiment-tibble Abstraction: 2 × 1 #> # Groups: rows(direction) #>   .features .samples | col_sums  | direction | sample    condition #>       <int>    <int> | <list>    | <chr>     | <list>    <list>    #> 1         1        1 | <dbl [4]> | -         | <chr [4]> <chr [4]> #> 2         2        1 | <dbl [4]> | +         | <chr [4]> <chr [4]>"},{"path":"https://jtlandis.github.io/biocmask/reference/vctrs-vec_recycle.html","id":null,"dir":"Reference","previous_headings":"","what":"Recycle a vector — vctrs-vec_recycle","title":"Recycle a vector — vctrs-vec_recycle","text":"re-export vctrs::vec_recycle S7 generic function allow S4Vectors.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/vctrs-vec_recycle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recycle a vector — vctrs-vec_recycle","text":"","code":"vec_recycle(x, size, ..., x_arg = \"\", call = caller_env())"},{"path":"https://jtlandis.github.io/biocmask/reference/vctrs-vec_recycle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recycle a vector — vctrs-vec_recycle","text":"x vector recycle. size Desired output size. ... Depending function used: vec_recycle_common(), vectors recycle. vec_recycle(), dots empty. x_arg Argument name x. used error messages inform user argument incompatible size. call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/vctrs-vec_recycle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recycle a vector — vctrs-vec_recycle","text":"S3 S4 vector","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/vctrs-vec_recycle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recycle a vector — vctrs-vec_recycle","text":"","code":"vec_recycle(1L, size = 5L) #> [1] 1 1 1 1 1 vec_recycle(S4Vectors::Rle(1L), size = 5L) #> integer-Rle of length 5 with 1 run #>   Lengths: 5 #>   Values : 1"},{"path":"https://jtlandis.github.io/biocmask/reference/vctrs-vec_rep.html","id":null,"dir":"Reference","previous_headings":"","what":"replicate a vector — vctrs-vec_rep","title":"replicate a vector — vctrs-vec_rep","text":"re-export vctrs::vec_rep vctrs::vec_rep_each S7 generic function allow S4Vectors.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/vctrs-vec_rep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"replicate a vector — vctrs-vec_rep","text":"","code":"vec_rep(   x,   times,   ...,   error_call = caller_env(),   x_arg = \"x\",   times_arg = \"times\" )  vec_rep_each(   x,   times,   ...,   error_call = caller_env(),   x_arg = \"x\",   times_arg = \"times\" )"},{"path":"https://jtlandis.github.io/biocmask/reference/vctrs-vec_rep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"replicate a vector — vctrs-vec_rep","text":"x vector. times vec_rep(), single integer number times repeat entire vector. vec_rep_each(), integer vector number times repeat element x. times recycled size x. ... dots future extensions must empty. error_call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information. x_arg, times_arg Argument names errors.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/vctrs-vec_rep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"replicate a vector — vctrs-vec_rep","text":"new S3 S4 vector replicated specified times","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/vctrs-vec_rep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"replicate a vector — vctrs-vec_rep","text":"","code":"vec_rep(1:2, times = 5) #>  [1] 1 2 1 2 1 2 1 2 1 2 vec_rep(S4Vectors::Rle(1:2), times = 5) #> integer-Rle of length 10 with 10 runs #>   Lengths: 1 1 1 1 1 1 1 1 1 1 #>   Values : 1 2 1 2 1 2 1 2 1 2  vec_rep_each(1:2, times = 5) #>  [1] 1 1 1 1 1 2 2 2 2 2 vec_rep_each(S4Vectors::Rle(1:2), times = 5) #> integer-Rle of length 10 with 2 runs #>   Lengths: 5 5 #>   Values : 1 2"},{"path":"https://jtlandis.github.io/biocmask/reference/vctrs_slice.html","id":null,"dir":"Reference","previous_headings":"","what":"Get observations of a vector — vctrs_slice","title":"Get observations of a vector — vctrs_slice","text":"extends vctrs::vec_slice S4Vectors::Vector class masking vec_slice S7::new_generic. Atomic vectors base S3 classes (list, data.frame, factor, Dat, POSIXct) dispatch vctrs::vec_slice method normal. Dispatch support S4Vectors::Vector S4Vectors::DataFrame classes provides unified framework working base R vectors S4Vectors.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/vctrs_slice.html","id":"s-vectors-vector-implementation","dir":"Reference","previous_headings":"","what":"S4Vectors::Vector Implementation","title":"Get observations of a vector — vctrs_slice","text":"method naively call [ method S4 class inherits S4Vectors::Vector class. may efficient way slice S4 class, work. implementation, x@mcol data expected retained call biocmask::vec_slice(x, ).","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/vctrs_slice.html","id":"s-vectors-dataframe-implementation","dir":"Reference","previous_headings":"","what":"S4Vectors::DataFrame Implementation","title":"Get observations of a vector — vctrs_slice","text":"DataFrame implementation works similar vctrs::vec_slice works data.frame object. sliced rows x@listData. maintain size stability DataFrame object, change @nrows appropriate value, perform recursive call @elementMetadata NULL.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/vctrs_slice.html","id":"performance","dir":"Reference","previous_headings":"","what":"Performance","title":"Get observations of a vector — vctrs_slice","text":"Depending size complexity S4 Vector object, may find standard subset operation extremely slow. example, consider SummarizedExperiment whose rowData contains CompressedGRangesList object assigned name \"exons\" whose length 250,000 underlying @unlistData length 1,600,000. Performing .features grouping operation attempting evaluate exons within row context force CompressedGRangesList object chopped element-wise. Unfortunately, massive performance hit attempting construct 250,000 GRanges. Unless mind waiting hour dplyr verb exons gets evaluated, consider biocmask_s4_proxy_vec(). attempts reconstruct certain standard S4Vectors::Vectors standard vectors tibbles. equivalent exons object require much memory use, advantage taking several seconds construct.done, can attempt restore original S4 Vector biocmask_restore_s4_proxy(). biocmask_s4_proxy_vec() faster work less checks object validity @elementMetadata @metadata dropped objects.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/vctrs_slice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get observations of a vector — vctrs_slice","text":"","code":"vec_slice(x, i, ...)"},{"path":"https://jtlandis.github.io/biocmask/reference/vctrs_slice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get observations of a vector — vctrs_slice","text":"x vector integer, character logical vector specifying locations names observations get/set. Specify TRUE index elements (x[]), NULL, FALSE integer() index none (x[NULL]). ... dots future extensions must empty.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/vctrs_slice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get observations of a vector — vctrs_slice","text":"new S3 S4 vector subsetted ","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/vctrs_slice.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get observations of a vector — vctrs_slice","text":"","code":"vec_slice(1:10, i = 5) #> [1] 5 vec_slice(S4Vectors::Rle(rep(1:3, each = 3)), i = 5) #> integer-Rle of length 1 with 1 run #>   Lengths: 1 #>   Values : 2"},{"path":"https://jtlandis.github.io/biocmask/reference/vectors.html","id":null,"dir":"Reference","previous_headings":"","what":"S7 classes for vctrs and S4 Vectors — vectors","title":"S7 classes for vctrs and S4 Vectors — vectors","text":"set S7 classes Class unions help establish S7 method dispatch. classes made re-export several vctrs functions internals biocmask consistent room optimization.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/vectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S7 classes for vctrs and S4 Vectors — vectors","text":"","code":"class_vctrs  class_s4_vctrs  class_DF"},{"path":"https://jtlandis.github.io/biocmask/reference/vectors.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"S7 classes for vctrs and S4 Vectors — vectors","text":"object class S7_union length 1. object class classRepresentation length 1. object class classRepresentation length 1.","code":""},{"path":"https://jtlandis.github.io/biocmask/reference/vectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S7 classes for vctrs and S4 Vectors — vectors","text":"S7 class union base class","code":""},{"path":[]}]
